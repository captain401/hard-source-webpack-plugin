'use strict';

const pluginCompat = require('./util/plugin-compat');

const matchTest = (test, source) => {
  if (Array.isArray(test)) {
    return test.some(subtest => matchTest(subtest, source));
  } else if (test instanceof RegExp) {
    return test.test(source);
  } else if (typeof test === 'string') {
    return source.startsWith(test);
  } else if (typeof test === 'function') {
    return test(source);
  }
  return false;
};

const matchOne = ({ test, include, exclude }, source) => {
  return (test ? matchTest(test, source) : true) && (include ? matchTest(include, source) : true) && (exclude ? !matchTest(exclude, source) : true);
};

const matchAny = (test, source) => {
  if (Array.isArray(test)) {
    return test.some(subtest => matchOne(subtest, source));
  }
  return matchOne(test, source);
};

class ExcludeModulePlugin {
  constructor(match) {
    this.match = match;
  }

  apply(compiler) {
    const compilerHooks = pluginCompat.hooks(compiler);

    compilerHooks.afterPlugins.tap('HardSource - ExcludeModulePlugin', () => {
      compilerHooks._hardSourceAfterFreezeModule.tap('HardSource - ExcludeModulePlugin', (frozen, module, extra) => {
        if (matchAny(this.match, module.identifier())) {
          return null;
        }
        return frozen;
      });
    });
  }
}

module.exports = ExcludeModulePlugin;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhcmQtc291cmNlLXdlYnBhY2stcGx1Z2luL2xpYi9FeGNsdWRlTW9kdWxlUGx1Z2luLmpzIl0sIm5hbWVzIjpbInBsdWdpbkNvbXBhdCIsInJlcXVpcmUiLCJtYXRjaFRlc3QiLCJ0ZXN0Iiwic291cmNlIiwiQXJyYXkiLCJpc0FycmF5Iiwic29tZSIsInN1YnRlc3QiLCJSZWdFeHAiLCJzdGFydHNXaXRoIiwibWF0Y2hPbmUiLCJpbmNsdWRlIiwiZXhjbHVkZSIsIm1hdGNoQW55IiwiRXhjbHVkZU1vZHVsZVBsdWdpbiIsImNvbnN0cnVjdG9yIiwibWF0Y2giLCJhcHBseSIsImNvbXBpbGVyIiwiY29tcGlsZXJIb29rcyIsImhvb2tzIiwiYWZ0ZXJQbHVnaW5zIiwidGFwIiwiX2hhcmRTb3VyY2VBZnRlckZyZWV6ZU1vZHVsZSIsImZyb3plbiIsIm1vZHVsZSIsImV4dHJhIiwiaWRlbnRpZmllciIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsZUFBZUMsK0JBQXJCOztBQUVBLE1BQU1DLFlBQVksQ0FBQ0MsSUFBRCxFQUFPQyxNQUFQLEtBQWtCO0FBQ2xDLE1BQUlDLE1BQU1DLE9BQU4sQ0FBY0gsSUFBZCxDQUFKLEVBQXlCO0FBQ3ZCLFdBQU9BLEtBQUtJLElBQUwsQ0FBVUMsV0FBV04sVUFBVU0sT0FBVixFQUFtQkosTUFBbkIsQ0FBckIsQ0FBUDtBQUNELEdBRkQsTUFFTyxJQUFJRCxnQkFBZ0JNLE1BQXBCLEVBQTRCO0FBQ2pDLFdBQU9OLEtBQUtBLElBQUwsQ0FBVUMsTUFBVixDQUFQO0FBQ0QsR0FGTSxNQUVBLElBQUksT0FBT0QsSUFBUCxLQUFnQixRQUFwQixFQUE4QjtBQUNuQyxXQUFPQyxPQUFPTSxVQUFQLENBQWtCUCxJQUFsQixDQUFQO0FBQ0QsR0FGTSxNQUVBLElBQUksT0FBT0EsSUFBUCxLQUFnQixVQUFwQixFQUFnQztBQUNyQyxXQUFPQSxLQUFLQyxNQUFMLENBQVA7QUFDRDtBQUNELFNBQU8sS0FBUDtBQUNELENBWEQ7O0FBYUEsTUFBTU8sV0FBVyxDQUFDLEVBQUVSLElBQUYsRUFBUVMsT0FBUixFQUFpQkMsT0FBakIsRUFBRCxFQUE2QlQsTUFBN0IsS0FBd0M7QUFDdkQsU0FDRSxDQUFDRCxPQUFPRCxVQUFVQyxJQUFWLEVBQWdCQyxNQUFoQixDQUFQLEdBQWlDLElBQWxDLE1BQ0NRLFVBQVVWLFVBQVVVLE9BQVYsRUFBbUJSLE1BQW5CLENBQVYsR0FBdUMsSUFEeEMsTUFFQ1MsVUFBVSxDQUFDWCxVQUFVVyxPQUFWLEVBQW1CVCxNQUFuQixDQUFYLEdBQXdDLElBRnpDLENBREY7QUFLRCxDQU5EOztBQVFBLE1BQU1VLFdBQVcsQ0FBQ1gsSUFBRCxFQUFPQyxNQUFQLEtBQWtCO0FBQ2pDLE1BQUlDLE1BQU1DLE9BQU4sQ0FBY0gsSUFBZCxDQUFKLEVBQXlCO0FBQ3ZCLFdBQU9BLEtBQUtJLElBQUwsQ0FBVUMsV0FBV0csU0FBU0gsT0FBVCxFQUFrQkosTUFBbEIsQ0FBckIsQ0FBUDtBQUNEO0FBQ0QsU0FBT08sU0FBU1IsSUFBVCxFQUFlQyxNQUFmLENBQVA7QUFDRCxDQUxEOztBQU9BLE1BQU1XLG1CQUFOLENBQTBCO0FBQ3hCQyxjQUFZQyxLQUFaLEVBQW1CO0FBQ2pCLFNBQUtBLEtBQUwsR0FBYUEsS0FBYjtBQUNEOztBQUVEQyxRQUFNQyxRQUFOLEVBQWdCO0FBQ2QsVUFBTUMsZ0JBQWdCcEIsYUFBYXFCLEtBQWIsQ0FBbUJGLFFBQW5CLENBQXRCOztBQUVBQyxrQkFBY0UsWUFBZCxDQUEyQkMsR0FBM0IsQ0FBK0Isa0NBQS9CLEVBQW1FLE1BQU07QUFDdkVILG9CQUFjSSw0QkFBZCxDQUEyQ0QsR0FBM0MsQ0FDRSxrQ0FERixFQUVFLENBQUNFLE1BQUQsRUFBU0MsTUFBVCxFQUFpQkMsS0FBakIsS0FBMkI7QUFDekIsWUFBSWIsU0FBUyxLQUFLRyxLQUFkLEVBQXFCUyxPQUFPRSxVQUFQLEVBQXJCLENBQUosRUFBK0M7QUFDN0MsaUJBQU8sSUFBUDtBQUNEO0FBQ0QsZUFBT0gsTUFBUDtBQUNELE9BUEg7QUFTRCxLQVZEO0FBV0Q7QUFuQnVCOztBQXNCMUJDLE9BQU9HLE9BQVAsR0FBaUJkLG1CQUFqQiIsImZpbGUiOiJoYXJkLXNvdXJjZS13ZWJwYWNrLXBsdWdpbi9saWIvRXhjbHVkZU1vZHVsZVBsdWdpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBsdWdpbkNvbXBhdCA9IHJlcXVpcmUoJy4vdXRpbC9wbHVnaW4tY29tcGF0Jyk7XG5cbmNvbnN0IG1hdGNoVGVzdCA9ICh0ZXN0LCBzb3VyY2UpID0+IHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodGVzdCkpIHtcbiAgICByZXR1cm4gdGVzdC5zb21lKHN1YnRlc3QgPT4gbWF0Y2hUZXN0KHN1YnRlc3QsIHNvdXJjZSkpO1xuICB9IGVsc2UgaWYgKHRlc3QgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gdGVzdC50ZXN0KHNvdXJjZSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHRlc3QgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHNvdXJjZS5zdGFydHNXaXRoKHRlc3QpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRlc3Qoc291cmNlKTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5jb25zdCBtYXRjaE9uZSA9ICh7IHRlc3QsIGluY2x1ZGUsIGV4Y2x1ZGUgfSwgc291cmNlKSA9PiB7XG4gIHJldHVybiAoXG4gICAgKHRlc3QgPyBtYXRjaFRlc3QodGVzdCwgc291cmNlKSA6IHRydWUpICYmXG4gICAgKGluY2x1ZGUgPyBtYXRjaFRlc3QoaW5jbHVkZSwgc291cmNlKSA6IHRydWUpICYmXG4gICAgKGV4Y2x1ZGUgPyAhbWF0Y2hUZXN0KGV4Y2x1ZGUsIHNvdXJjZSkgOiB0cnVlKVxuICApO1xufTtcblxuY29uc3QgbWF0Y2hBbnkgPSAodGVzdCwgc291cmNlKSA9PiB7XG4gIGlmIChBcnJheS5pc0FycmF5KHRlc3QpKSB7XG4gICAgcmV0dXJuIHRlc3Quc29tZShzdWJ0ZXN0ID0+IG1hdGNoT25lKHN1YnRlc3QsIHNvdXJjZSkpO1xuICB9XG4gIHJldHVybiBtYXRjaE9uZSh0ZXN0LCBzb3VyY2UpO1xufTtcblxuY2xhc3MgRXhjbHVkZU1vZHVsZVBsdWdpbiB7XG4gIGNvbnN0cnVjdG9yKG1hdGNoKSB7XG4gICAgdGhpcy5tYXRjaCA9IG1hdGNoO1xuICB9XG5cbiAgYXBwbHkoY29tcGlsZXIpIHtcbiAgICBjb25zdCBjb21waWxlckhvb2tzID0gcGx1Z2luQ29tcGF0Lmhvb2tzKGNvbXBpbGVyKTtcblxuICAgIGNvbXBpbGVySG9va3MuYWZ0ZXJQbHVnaW5zLnRhcCgnSGFyZFNvdXJjZSAtIEV4Y2x1ZGVNb2R1bGVQbHVnaW4nLCAoKSA9PiB7XG4gICAgICBjb21waWxlckhvb2tzLl9oYXJkU291cmNlQWZ0ZXJGcmVlemVNb2R1bGUudGFwKFxuICAgICAgICAnSGFyZFNvdXJjZSAtIEV4Y2x1ZGVNb2R1bGVQbHVnaW4nLFxuICAgICAgICAoZnJvemVuLCBtb2R1bGUsIGV4dHJhKSA9PiB7XG4gICAgICAgICAgaWYgKG1hdGNoQW55KHRoaXMubWF0Y2gsIG1vZHVsZS5pZGVudGlmaWVyKCkpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGZyb3plbjtcbiAgICAgICAgfSxcbiAgICAgICk7XG4gICAgfSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBFeGNsdWRlTW9kdWxlUGx1Z2luO1xuIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvdHlsZXJhcmJ1cy9kZXYvcHJvdmlkZXIvc3JjIn0=
