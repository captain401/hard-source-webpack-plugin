"use strict";

require("source-map-support/register");

// Perform a set of tasks in array quickly. Sometimes testing much better for
// large sets of work instead of individual promises.
const bulkFsTask = (array, each) => new Promise((resolve, reject) => {
  let ops = 0;
  const out = [];
  array.forEach((item, i) => {
    out[i] = each(item, (back, callback) => {
      ops++;
      return (err, value) => {
        try {
          out[i] = back(err, value, out[i]);
        } catch (e) {
          return reject(e);
        }

        ops--;
        if (ops === 0) {
          resolve(out);
        }
      };
    });
  });
  if (ops === 0) {
    resolve(out);
  }
});

module.exports = bulkFsTask;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhcmQtc291cmNlLXdlYnBhY2stcGx1Z2luL2xpYi91dGlsL2J1bGstZnMtdGFzay5qcyJdLCJuYW1lcyI6WyJidWxrRnNUYXNrIiwiYXJyYXkiLCJlYWNoIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJvcHMiLCJvdXQiLCJmb3JFYWNoIiwiaXRlbSIsImkiLCJiYWNrIiwiY2FsbGJhY2siLCJlcnIiLCJ2YWx1ZSIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLE1BQU1BLGFBQWEsQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEtBQ2pCLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDL0IsTUFBSUMsTUFBTSxDQUFWO0FBQ0EsUUFBTUMsTUFBTSxFQUFaO0FBQ0FOLFFBQU1PLE9BQU4sQ0FBYyxDQUFDQyxJQUFELEVBQU9DLENBQVAsS0FBYTtBQUN6QkgsUUFBSUcsQ0FBSixJQUFTUixLQUFLTyxJQUFMLEVBQVcsQ0FBQ0UsSUFBRCxFQUFPQyxRQUFQLEtBQW9CO0FBQ3RDTjtBQUNBLGFBQU8sQ0FBQ08sR0FBRCxFQUFNQyxLQUFOLEtBQWdCO0FBQ3JCLFlBQUk7QUFDRlAsY0FBSUcsQ0FBSixJQUFTQyxLQUFLRSxHQUFMLEVBQVVDLEtBQVYsRUFBaUJQLElBQUlHLENBQUosQ0FBakIsQ0FBVDtBQUNELFNBRkQsQ0FFRSxPQUFPSyxDQUFQLEVBQVU7QUFDVixpQkFBT1YsT0FBT1UsQ0FBUCxDQUFQO0FBQ0Q7O0FBRURUO0FBQ0EsWUFBSUEsUUFBUSxDQUFaLEVBQWU7QUFDYkYsa0JBQVFHLEdBQVI7QUFDRDtBQUNGLE9BWEQ7QUFZRCxLQWRRLENBQVQ7QUFlRCxHQWhCRDtBQWlCQSxNQUFJRCxRQUFRLENBQVosRUFBZTtBQUNiRixZQUFRRyxHQUFSO0FBQ0Q7QUFDRixDQXZCRCxDQURGOztBQTBCQVMsT0FBT0MsT0FBUCxHQUFpQmpCLFVBQWpCIiwiZmlsZSI6ImhhcmQtc291cmNlLXdlYnBhY2stcGx1Z2luL2xpYi91dGlsL2J1bGstZnMtdGFzay5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFBlcmZvcm0gYSBzZXQgb2YgdGFza3MgaW4gYXJyYXkgcXVpY2tseS4gU29tZXRpbWVzIHRlc3RpbmcgbXVjaCBiZXR0ZXIgZm9yXG4vLyBsYXJnZSBzZXRzIG9mIHdvcmsgaW5zdGVhZCBvZiBpbmRpdmlkdWFsIHByb21pc2VzLlxuY29uc3QgYnVsa0ZzVGFzayA9IChhcnJheSwgZWFjaCkgPT5cbiAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGxldCBvcHMgPSAwO1xuICAgIGNvbnN0IG91dCA9IFtdO1xuICAgIGFycmF5LmZvckVhY2goKGl0ZW0sIGkpID0+IHtcbiAgICAgIG91dFtpXSA9IGVhY2goaXRlbSwgKGJhY2ssIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIG9wcysrO1xuICAgICAgICByZXR1cm4gKGVyciwgdmFsdWUpID0+IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgb3V0W2ldID0gYmFjayhlcnIsIHZhbHVlLCBvdXRbaV0pO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3QoZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgb3BzLS07XG4gICAgICAgICAgaWYgKG9wcyA9PT0gMCkge1xuICAgICAgICAgICAgcmVzb2x2ZShvdXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChvcHMgPT09IDApIHtcbiAgICAgIHJlc29sdmUob3V0KTtcbiAgICB9XG4gIH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJ1bGtGc1Rhc2s7XG4iXSwic291cmNlUm9vdCI6Ii9Vc2Vycy90eWxlcmFyYnVzL2Rldi9wcm92aWRlci9zcmMifQ==
