'use strict';

require('source-map-support/register');

const cachePrefix = require('./util').cachePrefix;
const logMessages = require('./util/log-messages');
const pluginCompat = require('./util/plugin-compat');

class TransformCompilationPlugin {
  apply(compiler) {
    let store;

    pluginCompat.tap(compiler, '_hardSourceMethods', 'TransformCompilationPlugin copy methods', methods => {
      store = methods.store;
      // fetch = methods.fetch;
      // freeze = methods.freeze;
      // thaw = methods.thaw;
    });

    pluginCompat.tap(compiler, '_hardSourceFreezeCompilation', 'TransformCompilationPlugin freeze', (_, compilation) => {
      compilation.modules.forEach(module => {
        const identifierPrefix = cachePrefix(compilation);
        if (identifierPrefix === null) {
          return;
        }
        const identifier = identifierPrefix + module.identifier();

        try {
          store('Module', identifier, module, {
            id: identifier,
            compilation
          });
        } catch (e) {
          logMessages.moduleFreezeError(compilation, module, e);
        }
      });
    });
  }
}

module.exports = TransformCompilationPlugin;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhcmQtc291cmNlLXdlYnBhY2stcGx1Z2luL2xpYi9UcmFuc2Zvcm1Db21waWxhdGlvblBsdWdpbi5qcyJdLCJuYW1lcyI6WyJjYWNoZVByZWZpeCIsInJlcXVpcmUiLCJsb2dNZXNzYWdlcyIsInBsdWdpbkNvbXBhdCIsIlRyYW5zZm9ybUNvbXBpbGF0aW9uUGx1Z2luIiwiYXBwbHkiLCJjb21waWxlciIsInN0b3JlIiwidGFwIiwibWV0aG9kcyIsIl8iLCJjb21waWxhdGlvbiIsIm1vZHVsZXMiLCJmb3JFYWNoIiwibW9kdWxlIiwiaWRlbnRpZmllclByZWZpeCIsImlkZW50aWZpZXIiLCJpZCIsImUiLCJtb2R1bGVGcmVlemVFcnJvciIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxjQUFjQyxRQUFRLFFBQVIsRUFBa0JELFdBQXRDO0FBQ0EsTUFBTUUsY0FBY0QsUUFBUSxxQkFBUixDQUFwQjtBQUNBLE1BQU1FLGVBQWVGLFFBQVEsc0JBQVIsQ0FBckI7O0FBRUEsTUFBTUcsMEJBQU4sQ0FBaUM7QUFDL0JDLFFBQU1DLFFBQU4sRUFBZ0I7QUFDZCxRQUFJQyxLQUFKOztBQUVBSixpQkFBYUssR0FBYixDQUNFRixRQURGLEVBRUUsb0JBRkYsRUFHRSx5Q0FIRixFQUlFRyxXQUFXO0FBQ1RGLGNBQVFFLFFBQVFGLEtBQWhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0QsS0FUSDs7QUFZQUosaUJBQWFLLEdBQWIsQ0FDRUYsUUFERixFQUVFLDhCQUZGLEVBR0UsbUNBSEYsRUFJRSxDQUFDSSxDQUFELEVBQUlDLFdBQUosS0FBb0I7QUFDbEJBLGtCQUFZQyxPQUFaLENBQW9CQyxPQUFwQixDQUE0QkMsVUFBVTtBQUNwQyxjQUFNQyxtQkFBbUJmLFlBQVlXLFdBQVosQ0FBekI7QUFDQSxZQUFJSSxxQkFBcUIsSUFBekIsRUFBK0I7QUFDN0I7QUFDRDtBQUNELGNBQU1DLGFBQWFELG1CQUFtQkQsT0FBT0UsVUFBUCxFQUF0Qzs7QUFFQSxZQUFJO0FBQ0ZULGdCQUFNLFFBQU4sRUFBZ0JTLFVBQWhCLEVBQTRCRixNQUE1QixFQUFvQztBQUNsQ0csZ0JBQUlELFVBRDhCO0FBRWxDTDtBQUZrQyxXQUFwQztBQUlELFNBTEQsQ0FLRSxPQUFPTyxDQUFQLEVBQVU7QUFDVmhCLHNCQUFZaUIsaUJBQVosQ0FBOEJSLFdBQTlCLEVBQTJDRyxNQUEzQyxFQUFtREksQ0FBbkQ7QUFDRDtBQUNGLE9BZkQ7QUFnQkQsS0FyQkg7QUF1QkQ7QUF2QzhCOztBQTBDakNKLE9BQU9NLE9BQVAsR0FBaUJoQiwwQkFBakIiLCJmaWxlIjoiaGFyZC1zb3VyY2Utd2VicGFjay1wbHVnaW4vbGliL1RyYW5zZm9ybUNvbXBpbGF0aW9uUGx1Z2luLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2FjaGVQcmVmaXggPSByZXF1aXJlKCcuL3V0aWwnKS5jYWNoZVByZWZpeDtcbmNvbnN0IGxvZ01lc3NhZ2VzID0gcmVxdWlyZSgnLi91dGlsL2xvZy1tZXNzYWdlcycpO1xuY29uc3QgcGx1Z2luQ29tcGF0ID0gcmVxdWlyZSgnLi91dGlsL3BsdWdpbi1jb21wYXQnKTtcblxuY2xhc3MgVHJhbnNmb3JtQ29tcGlsYXRpb25QbHVnaW4ge1xuICBhcHBseShjb21waWxlcikge1xuICAgIGxldCBzdG9yZTtcblxuICAgIHBsdWdpbkNvbXBhdC50YXAoXG4gICAgICBjb21waWxlcixcbiAgICAgICdfaGFyZFNvdXJjZU1ldGhvZHMnLFxuICAgICAgJ1RyYW5zZm9ybUNvbXBpbGF0aW9uUGx1Z2luIGNvcHkgbWV0aG9kcycsXG4gICAgICBtZXRob2RzID0+IHtcbiAgICAgICAgc3RvcmUgPSBtZXRob2RzLnN0b3JlO1xuICAgICAgICAvLyBmZXRjaCA9IG1ldGhvZHMuZmV0Y2g7XG4gICAgICAgIC8vIGZyZWV6ZSA9IG1ldGhvZHMuZnJlZXplO1xuICAgICAgICAvLyB0aGF3ID0gbWV0aG9kcy50aGF3O1xuICAgICAgfSxcbiAgICApO1xuXG4gICAgcGx1Z2luQ29tcGF0LnRhcChcbiAgICAgIGNvbXBpbGVyLFxuICAgICAgJ19oYXJkU291cmNlRnJlZXplQ29tcGlsYXRpb24nLFxuICAgICAgJ1RyYW5zZm9ybUNvbXBpbGF0aW9uUGx1Z2luIGZyZWV6ZScsXG4gICAgICAoXywgY29tcGlsYXRpb24pID0+IHtcbiAgICAgICAgY29tcGlsYXRpb24ubW9kdWxlcy5mb3JFYWNoKG1vZHVsZSA9PiB7XG4gICAgICAgICAgY29uc3QgaWRlbnRpZmllclByZWZpeCA9IGNhY2hlUHJlZml4KGNvbXBpbGF0aW9uKTtcbiAgICAgICAgICBpZiAoaWRlbnRpZmllclByZWZpeCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBpZGVudGlmaWVyID0gaWRlbnRpZmllclByZWZpeCArIG1vZHVsZS5pZGVudGlmaWVyKCk7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgc3RvcmUoJ01vZHVsZScsIGlkZW50aWZpZXIsIG1vZHVsZSwge1xuICAgICAgICAgICAgICBpZDogaWRlbnRpZmllcixcbiAgICAgICAgICAgICAgY29tcGlsYXRpb24sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBsb2dNZXNzYWdlcy5tb2R1bGVGcmVlemVFcnJvcihjb21waWxhdGlvbiwgbW9kdWxlLCBlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVHJhbnNmb3JtQ29tcGlsYXRpb25QbHVnaW47XG4iXSwic291cmNlUm9vdCI6Ii9Vc2Vycy90eWxlcmFyYnVzL2Rldi9wcm92aWRlci9zcmMifQ==
