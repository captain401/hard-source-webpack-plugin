'use strict';

const crypto = require('crypto');
const path = require('path');

const nodeObjectHash = require('node-object-hash');

const sort = nodeObjectHash({
  sort: false
}).sort;

function relateContextToCacheDir(config) {
  const hardSourcePlugin = config.plugins.find(({ constructor }) => constructor.name === 'HardSourceWebpackPlugin');
  const cacheDir = hardSourcePlugin.getCachePath();
  const context = path.resolve(process.cwd(), config.context);
  const clone = Object.assign({}, config, {
    context: path.relative(cacheDir, context)
  });
  const sorted = sort(clone).replace(new RegExp(`${context}[^,\\]}]*`, 'g'), match => path.relative(cacheDir, match)).replace(/\\/g, '/');
  return crypto.createHash('sha256').update(sorted).digest('hex');
}

module.exports = relateContextToCacheDir;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhcmQtc291cmNlLXdlYnBhY2stcGx1Z2luL2xpYi9kZWZhdWx0Q29uZmlnSGFzaC5qcyJdLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwicGF0aCIsIm5vZGVPYmplY3RIYXNoIiwic29ydCIsInJlbGF0ZUNvbnRleHRUb0NhY2hlRGlyIiwiY29uZmlnIiwiaGFyZFNvdXJjZVBsdWdpbiIsInBsdWdpbnMiLCJmaW5kIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiY2FjaGVEaXIiLCJnZXRDYWNoZVBhdGgiLCJjb250ZXh0IiwicmVzb2x2ZSIsInByb2Nlc3MiLCJjd2QiLCJjbG9uZSIsIk9iamVjdCIsImFzc2lnbiIsInJlbGF0aXZlIiwic29ydGVkIiwicmVwbGFjZSIsIlJlZ0V4cCIsIm1hdGNoIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsU0FBU0MsUUFBUSxRQUFSLENBQWY7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxNQUFNRSxpQkFBaUJGLFFBQVEsa0JBQVIsQ0FBdkI7O0FBRUEsTUFBTUcsT0FBT0QsZUFBZTtBQUMxQkMsUUFBTTtBQURvQixDQUFmLEVBRVZBLElBRkg7O0FBSUEsU0FBU0MsdUJBQVQsQ0FBaUNDLE1BQWpDLEVBQXlDO0FBQ3ZDLFFBQU1DLG1CQUFtQkQsT0FBT0UsT0FBUCxDQUFlQyxJQUFmLENBQ3ZCLENBQUMsRUFBRUMsV0FBRixFQUFELEtBQXFCQSxZQUFZQyxJQUFaLEtBQXFCLHlCQURuQixDQUF6QjtBQUdBLFFBQU1DLFdBQVdMLGlCQUFpQk0sWUFBakIsRUFBakI7QUFDQSxRQUFNQyxVQUFVWixLQUFLYSxPQUFMLENBQWFDLFFBQVFDLEdBQVIsRUFBYixFQUE0QlgsT0FBT1EsT0FBbkMsQ0FBaEI7QUFDQSxRQUFNSSxRQUFRQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQmQsTUFBbEIsRUFBMEI7QUFDdENRLGFBQVNaLEtBQUttQixRQUFMLENBQWNULFFBQWQsRUFBd0JFLE9BQXhCO0FBRDZCLEdBQTFCLENBQWQ7QUFHQSxRQUFNUSxTQUFTbEIsS0FBS2MsS0FBTCxFQUNaSyxPQURZLENBQ0osSUFBSUMsTUFBSixDQUFZLEdBQUVWLE9BQVEsV0FBdEIsRUFBa0MsR0FBbEMsQ0FESSxFQUNvQ1csU0FDL0N2QixLQUFLbUIsUUFBTCxDQUFjVCxRQUFkLEVBQXdCYSxLQUF4QixDQUZXLEVBSVpGLE9BSlksQ0FJSixLQUpJLEVBSUcsR0FKSCxDQUFmO0FBS0EsU0FBT3ZCLE9BQ0owQixVQURJLENBQ08sUUFEUCxFQUVKQyxNQUZJLENBRUdMLE1BRkgsRUFHSk0sTUFISSxDQUdHLEtBSEgsQ0FBUDtBQUlEOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCekIsdUJBQWpCIiwiZmlsZSI6ImhhcmQtc291cmNlLXdlYnBhY2stcGx1Z2luL2xpYi9kZWZhdWx0Q29uZmlnSGFzaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuY29uc3Qgbm9kZU9iamVjdEhhc2ggPSByZXF1aXJlKCdub2RlLW9iamVjdC1oYXNoJyk7XG5cbmNvbnN0IHNvcnQgPSBub2RlT2JqZWN0SGFzaCh7XG4gIHNvcnQ6IGZhbHNlLFxufSkuc29ydDtcblxuZnVuY3Rpb24gcmVsYXRlQ29udGV4dFRvQ2FjaGVEaXIoY29uZmlnKSB7XG4gIGNvbnN0IGhhcmRTb3VyY2VQbHVnaW4gPSBjb25maWcucGx1Z2lucy5maW5kKFxuICAgICh7IGNvbnN0cnVjdG9yIH0pID0+IGNvbnN0cnVjdG9yLm5hbWUgPT09ICdIYXJkU291cmNlV2VicGFja1BsdWdpbicsXG4gICk7XG4gIGNvbnN0IGNhY2hlRGlyID0gaGFyZFNvdXJjZVBsdWdpbi5nZXRDYWNoZVBhdGgoKTtcbiAgY29uc3QgY29udGV4dCA9IHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpLCBjb25maWcuY29udGV4dCk7XG4gIGNvbnN0IGNsb25lID0gT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnLCB7XG4gICAgY29udGV4dDogcGF0aC5yZWxhdGl2ZShjYWNoZURpciwgY29udGV4dCksXG4gIH0pO1xuICBjb25zdCBzb3J0ZWQgPSBzb3J0KGNsb25lKVxuICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoYCR7Y29udGV4dH1bXixcXFxcXX1dKmAsICdnJyksIG1hdGNoID0+XG4gICAgICBwYXRoLnJlbGF0aXZlKGNhY2hlRGlyLCBtYXRjaCksXG4gICAgKVxuICAgIC5yZXBsYWNlKC9cXFxcL2csICcvJyk7XG4gIHJldHVybiBjcnlwdG9cbiAgICAuY3JlYXRlSGFzaCgnc2hhMjU2JylcbiAgICAudXBkYXRlKHNvcnRlZClcbiAgICAuZGlnZXN0KCdoZXgnKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSByZWxhdGVDb250ZXh0VG9DYWNoZURpcjtcbiJdLCJzb3VyY2VSb290IjoiL1VzZXJzL3R5bGVyYXJidXMvZGV2L3Byb3ZpZGVyL3NyYyJ9
